on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: Build on ubuntu-latest armv7
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu_latest

          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            apt-get update -q
            apt-get install build-essential -y -q
            apt-get install git -y -q
            cd /home/runner/work
            git clone https://github.com/RubyMetric/chsrc -b gh-pipeline -q
            cd chsrc
            make CI CI_BUILD_NAME=chsrc-armv7-linux
            cp ./chsrc-armv7-linux /artifacts


      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          pwd
          ls -al
          cd artifacts
          file ./chsrc-armv7-linux


  riscv_job:
    # The host should always be Linux
    runs-on: ubuntu-latest
    name: Build on ubuntu-latest riscv
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: riscv64
          distro: ubuntu_latest

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
          # apt update
          # apt install build-essential
          # make --version
          #  gcc --version


      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
